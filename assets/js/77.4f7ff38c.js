(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{729:function(t,_,v){"use strict";v.r(_);var r=v(12),s=Object(r.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[v("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/option-star/imgs/202204091522780.png",alt:"img"}})]),t._v(" "),v("h2",{attrs:{id:"_1-rsa-握手过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-rsa-握手过程"}},[t._v("#")]),t._v(" 1. RSA 握手过程")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/option-star/imgs/202204091325954.png",alt:"图片"}})]),t._v(" "),v("h3",{attrs:{id:"_1-第一次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-第一次握手"}},[t._v("#")]),t._v(" 1）第一次握手")]),t._v(" "),v("p",[t._v("​\t客户端首先会发一个「"),v("strong",[t._v("Client Hello")]),t._v("」消息：")]),t._v(" "),v("ul",[v("li",[t._v("客户端使用的 "),v("strong",[t._v("TLS 版本号")])]),t._v(" "),v("li",[t._v("支持的"),v("strong",[t._v("密码套件列表")])]),t._v(" "),v("li",[t._v("生成的"),v("strong",[t._v("随机数（*Client Random*）")]),t._v("：这个随机数会被服务端保留，它是生成对称加密密钥的材料之一")])]),t._v(" "),v("blockquote",[v("p",[t._v("Client Hello")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/option-star/imgs/202204091325971.png",alt:"图片"}})]),t._v(" "),v("h3",{attrs:{id:"_2-第二次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-第二次握手"}},[t._v("#")]),t._v(" 2）第二次握手")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("服务端返回「"),v("strong",[t._v("Server Hello")]),t._v("」消息")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("服务器确认的 "),v("strong",[t._v("TLS 版本号")])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("随机数")]),t._v("（Server Random）")])]),t._v(" "),v("li",[v("p",[t._v("从客户端的密码套件列表选择了一个合适的"),v("strong",[t._v("密码套件")]),t._v("。")])])])]),t._v(" "),v("li",[v("p",[t._v("服务端会发送「"),v("strong",[t._v("Server Certificate")]),t._v("」消息，这个消息里含有数字证书，目的是为了证明自己身份。")])]),t._v(" "),v("li",[v("p",[t._v("服务端发了「"),v("strong",[t._v("Server Hello Done")]),t._v("」消息：目的是告诉客户端，我已经把该给你的东西都给你了，本次打招呼完毕。")])])]),t._v(" "),v("h3",{attrs:{id:"_3-第三次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-第三次握手"}},[t._v("#")]),t._v(" 3）第三次握手")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("客户端验证证书，从证书中获取RSA公钥。")])]),t._v(" "),v("li",[v("p",[t._v("客户端就会生成一个新的"),v("strong",[t._v("随机数 (*pre-master*)")]),t._v("，用服务器的 RSA 公钥加密该随机数，通过「"),v("strong",[t._v("Change Cipher Key Exchange")]),t._v("」消息传给服务端。")])]),t._v(" "),v("li",[v("p",[t._v("客户端发一个「"),v("strong",[t._v("Change Cipher Spec")]),t._v("」，告诉服务端开始使用加密方式发送消息。")])]),t._v(" "),v("li",[v("p",[t._v("客户端发一个「"),v("strong",[t._v("Finished")]),t._v("」消息，把之前所有发送的数据做个摘要，再用会话密钥（master secret）加密一下，让服务器做个验证，验证加密通信是否可用和之前握手信息是否有被中途篡改过。")])])]),t._v(" "),v("h3",{attrs:{id:"_4-第四次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-第四次握手"}},[t._v("#")]),t._v(" 4）第四次握手")]),t._v(" "),v("ul",[v("li",[t._v("服务端同样发送「"),v("strong",[t._v("Change Cipher Spec")]),t._v("」")]),t._v(" "),v("li",[t._v("服务端同样发送「"),v("strong",[t._v("Finished")]),t._v("」")]),t._v(" "),v("li",[t._v("如果双方都验证加密和解密没问题，那么握手正式完成。最后，就用「会话密钥」加解密 HTTP 请求和响应了")])]),t._v(" "),v("h2",{attrs:{id:"_2-rsa算法的缺陷"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-rsa算法的缺陷"}},[t._v("#")]),t._v(" 2. RSA算法的缺陷")]),t._v(" "),v("p",[t._v("​\t"),v("strong",[t._v("不支持前向保密")]),t._v("。因为客户端传递随机数（用于生成对称加密密钥的条件之一）给服务端时使用的是公钥加密的，服务端收到到后，会用私钥解密得到随机数。所以一旦服务端的私钥泄漏了，过去被第三方截获的所有 TLS 通讯密文都会被破解。")])])}),[],!1,null,null,null);_.default=s.exports}}]);