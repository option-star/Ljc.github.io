(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{666:function(t,s,a){"use strict";a.r(s);var _=a(12),v=Object(_.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"一、css基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、css基础"}},[t._v("#")]),t._v(" 一、CSS基础")]),t._v(" "),a("h3",{attrs:{id:"_1-css选择器及其优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-css选择器及其优先级"}},[t._v("#")]),t._v(" 1. CSS选择器及其优先级")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("id选择器")])]),t._v(" "),a("li",[a("p",[t._v("类选择器、伪类选择器、属性选择器")])]),t._v(" "),a("li",[a("p",[t._v("标签选择器、伪元素选择器")])]),t._v(" "),a("li",[a("p",[t._v("h")])]),t._v(" "),a("li",[a("p",[t._v("标签选择器、伪元素选择器：1")])]),t._v(" "),a("li",[a("p",[t._v("类选择器、伪类选择器、属性选择器：10")])]),t._v(" "),a("li",[a("p",[t._v("id 选择器：100")])]),t._v(" "),a("li",[a("p",[t._v("内联样式：1000")])])]),t._v(" "),a("h3",{attrs:{id:"_2-标准的css盒子模型及其和低版本的ie盒子模型的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-标准的css盒子模型及其和低版本的ie盒子模型的区别"}},[t._v("#")]),t._v(" 2.标准的CSS盒子模型及其和低版本的IE盒子模型的区别？")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/ljcdzh/my_pic/raw/master/img/202203151455850.webp",alt:"img"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/5/30/17263443113eb879~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),t._v(" "),a("p",[t._v("​\t盒模型由内向外：内容 content + 内边距 padding + 边框 border + 外边距 margin")]),t._v(" "),a("p",[t._v("分为两类：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("标准盒模型："),a("code",[t._v("border-sizing:content-box")]),t._v("\nwidth 和 height 设置内容 content 的宽和高")])]),t._v(" "),a("li",[a("p",[t._v("IE盒模型："),a("code",[t._v("border-sizing:border-box")]),t._v("\nwidth 和 height 设置内容 content + 内边距 padding + 边框 border 的宽和高")])])]),t._v(" "),a("h3",{attrs:{id:"_3-哪些属性可以继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-哪些属性可以继承"}},[t._v("#")]),t._v(" 3. 哪些属性可以继承？")]),t._v(" "),a("p",[t._v("可继承的样式属性： "),a("code",[t._v("font-size")]),t._v(", "),a("code",[t._v("font-family")]),t._v(", "),a("code",[t._v("color")]),t._v(", "),a("code",[t._v("ul")]),t._v(", "),a("code",[t._v("li")]),t._v(", "),a("code",[t._v("dl")]),t._v(", "),a("code",[t._v("dd")]),t._v(", "),a("code",[t._v("dt")]),t._v(";")]),t._v(" "),a("p",[t._v("不可继承的样式属性： "),a("code",[t._v("border")]),t._v(", "),a("code",[t._v("padding")]),t._v(", "),a("code",[t._v("margin")]),t._v(", "),a("code",[t._v("width")]),t._v(", "),a("code",[t._v("height")]),t._v("；‘")]),t._v(" "),a("h3",{attrs:{id:"_4-css优先级算法如何计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-css优先级算法如何计算"}},[t._v("#")]),t._v(" 4. CSS优先级算法如何计算？")]),t._v(" "),a("ul",[a("li",[t._v("考虑到就近原则，同权重情况下样式定义以最近者为准")]),t._v(" "),a("li",[t._v("载入的样式按照最后的定位为准")])]),t._v(" "),a("p",[t._v("优先级排序：")]),t._v(" "),a("p",[t._v("同权重情况下： 内联样式表（标签内部）> 嵌入样式表（当前文件中）> 外部样式表（外部文件中）")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("!important > # > . > tag\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("🍀"),a("strong",[t._v("注意")]),t._v("：  "),a("code",[t._v("!important")]),t._v(" 比 内联优先级高")]),t._v(" "),a("h3",{attrs:{id:"_5-display有哪些值-他们的作用有"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-display有哪些值-他们的作用有"}},[t._v("#")]),t._v(" 5. display有哪些值？他们的作用有？")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("值")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("none")]),t._v(" "),a("td",[t._v("使用后元素将不会显示")])]),t._v(" "),a("tr",[a("td",[t._v("grid")]),t._v(" "),a("td",[t._v("定义一个容器属性为网格布局")])]),t._v(" "),a("tr",[a("td",[t._v("flex")]),t._v(" "),a("td",[t._v("定义一个弹性布局")])]),t._v(" "),a("tr",[a("td",[t._v("block")]),t._v(" "),a("td",[t._v("使用后元素将变为块级元素显示，元素前后带有换行符")])]),t._v(" "),a("tr",[a("td",[t._v("inline")]),t._v(" "),a("td",[t._v("display默认值。使用后原色变为行内元素显示，前后无换行符")])]),t._v(" "),a("tr",[a("td",[t._v("list-item")]),t._v(" "),a("td",[t._v("使用后元素作为列表显示")])]),t._v(" "),a("tr",[a("td",[t._v("run-in")]),t._v(" "),a("td",[t._v("使用后元素会根据上下文作为块级元素或行内元素显示")])]),t._v(" "),a("tr",[a("td",[t._v("table")]),t._v(" "),a("td",[t._v("使用后将作为块级表格来显示（类似"),a("code",[t._v("<table>")]),t._v("），前后带有换行符")])]),t._v(" "),a("tr",[a("td",[t._v("inline-table")]),t._v(" "),a("td",[t._v("使用后元素将作为内联表格显示（类似"),a("code",[t._v("<table>")]),t._v("），前后没有换行符")])]),t._v(" "),a("tr",[a("td",[t._v("table-row-group")]),t._v(" "),a("td",[t._v("元素将作为一个或多个行的分组来显示（类似"),a("code",[t._v("<tbody>")]),t._v("）")])]),t._v(" "),a("tr",[a("td",[t._v("table-hewder-group")]),t._v(" "),a("td",[t._v("元素将作为一个或多个行的分组来表示（类似"),a("code",[t._v("<thead>")]),t._v("）")])]),t._v(" "),a("tr",[a("td",[t._v("table-footer-group")]),t._v(" "),a("td",[t._v("元素将作为一个或多个行分组显示（类似"),a("code",[t._v("<tfoot>")]),t._v("）")])]),t._v(" "),a("tr",[a("td",[t._v("table-row")]),t._v(" "),a("td",[t._v("元素将作为一个表格行显示（类似"),a("code",[t._v("<tr>")]),t._v("）")])]),t._v(" "),a("tr",[a("td",[t._v("table-column-group")]),t._v(" "),a("td",[t._v("元素将作为一个或多个列的分组显示（类似"),a("code",[t._v("<colgroup>")]),t._v("）")])]),t._v(" "),a("tr",[a("td",[t._v("table-column")]),t._v(" "),a("td",[t._v("元素将作为一个单元格列显示（类似"),a("code",[t._v("<col>")]),t._v("）")])]),t._v(" "),a("tr",[a("td",[t._v("table-cell")]),t._v(" "),a("td",[t._v("元素将作为一个表格单元格显示（类似"),a("code",[t._v("<td>和<th>")]),t._v("）")])]),t._v(" "),a("tr",[a("td",[t._v("table-caption")]),t._v(" "),a("td",[t._v("元素将作为一个表格标题显示（类似"),a("code",[t._v("<caption>")]),t._v("）")])]),t._v(" "),a("tr",[a("td",[t._v("inherit")]),t._v(" "),a("td",[t._v("规定应该从父元素集成display属性的值")])])])]),t._v(" "),a("p",[t._v("其中，常用的有："),a("code",[t._v("block")]),t._v("， "),a("code",[t._v("inline-block")]),t._v("， "),a("code",[t._v("none")]),t._v("， "),a("code",[t._v("table")]),t._v("， "),a("code",[t._v("line")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"_6-什么是响应式设计-响应式设计的基本原理是什么-如何兼容低版本的ie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-什么是响应式设计-响应式设计的基本原理是什么-如何兼容低版本的ie"}},[t._v("#")]),t._v(" 6. 什么是响应式设计？响应式设计的基本原理是什么？如何兼容低版本的IE？")]),t._v(" "),a("p",[t._v("响应式网站设计"),a("code",[t._v("（Responsive Web design")]),t._v("）是一个网站能够兼容多个终端，而不是为每一个终端做一个特定的版本。")]),t._v(" "),a("p",[t._v("关于原理： 基本原理是通过媒体查询"),a("code",[t._v("（@media）")]),t._v("查询检测不同的设备屏幕尺寸做处理。")]),t._v(" "),a("p",[t._v("关于兼容： 页面头部必须有mate声明的"),a("code",[t._v("viewport")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("<meta name="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"’viewport’"')]),t._v(" content="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"”width=device-width,"')]),t._v(" initial-scale="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1."')]),t._v(" maximum-scale="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1,user-scalable=no”"')]),t._v("/>\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"_7-为什么要初始化css样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-为什么要初始化css样式"}},[t._v("#")]),t._v(" 7. 为什么要初始化CSS样式？")]),t._v(" "),a("p",[t._v("​\t因为浏览器兼容性问题，不同浏览器对不同标签有不同的默认值。")]),t._v(" "),a("h3",{attrs:{id:"_8-浮动原理以及为什么会出现浮动和什么时候需要清除浮动-清除浮动的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-浮动原理以及为什么会出现浮动和什么时候需要清除浮动-清除浮动的方式"}},[t._v("#")]),t._v(" 8. 浮动原理以及为什么会出现浮动和什么时候需要清除浮动？清除浮动的方式？")]),t._v(" "),a("p",[t._v("非IE浏览器下，容器不设定高度且子元素浮动时，容器高度不能被内容撑开。此时，内容会溢出到容器外面而影响布局。此类现象被称为浮动（溢出）。")]),t._v(" "),a("p",[t._v("原理：")]),t._v(" "),a("ul",[a("li",[t._v("浮动元素脱离文档流，不占据空间（引起“高度塌陷”现象）；")]),t._v(" "),a("li",[t._v("浮动元素碰到包含它的边框或其他浮动元素的边框停留。")])]),t._v(" "),a("p",[t._v("浮动元素碰到包含他的边框或者浮动元素的边框停留。由于浮动元素不在文档流之中，文档流的块级框会表现的就像浮动框不存在一样。浮动元素会漂浮在文档流的块级框之上。")]),t._v(" "),a("p",[t._v("浮动会带来的问题：")]),t._v(" "),a("ul",[a("li",[t._v("父级元素的高度将会无法被撑开，会影响与父级元素同级的元素")]),t._v(" "),a("li",[t._v("与浮动元素同级的非浮动元素（内联元素）会跟随其后")]),t._v(" "),a("li",[t._v("若浮动的元素不是第一个元素，则该元素之前的元素也要浮动，否则会影响页面的显示结构")])]),t._v(" "),a("p",[t._v("清除方式：")]),t._v(" "),a("ul",[a("li",[t._v("父级盒子定义高度"),a("code",[t._v("（height）")]),t._v(";")]),t._v(" "),a("li",[t._v("最后一个浮动元素后面加一个"),a("code",[t._v("div")]),t._v("空标签，并且添加样式"),a("code",[t._v("clear: both")]),t._v(";")]),t._v(" "),a("li",[t._v("包含浮动元素的父级标签添加样式"),a("code",[t._v("overflow")]),t._v("为"),a("code",[t._v("hidden/both")]),t._v(";")]),t._v(" "),a("li",[t._v("父级"),a("code",[t._v("div")]),t._v("定义"),a("code",[t._v("zoom")]),t._v(";")])]),t._v(" "),a("h3",{attrs:{id:"_9-css优化、提高性能的方法有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-css优化、提高性能的方法有哪些"}},[t._v("#")]),t._v(" 9. CSS优化、提高性能的方法有哪些？")]),t._v(" "),a("ul",[a("li",[t._v("多个"),a("code",[t._v("css")]),t._v("可合并，并尽量减少"),a("code",[t._v("http")]),t._v("请求")]),t._v(" "),a("li",[t._v("属性值为0时，不加单位")]),t._v(" "),a("li",[t._v("将"),a("code",[t._v("css")]),t._v("文件放在页面最上面")]),t._v(" "),a("li",[t._v("避免后代选择符，过度约束和链式选择符")]),t._v(" "),a("li",[t._v("使用紧凑的语法")]),t._v(" "),a("li",[t._v("避免不必要的重复")]),t._v(" "),a("li",[t._v("使用语义化命名，便于维护")]),t._v(" "),a("li",[t._v("尽量少的使用"),a("code",[t._v("!impotrant")]),t._v("，可以选择其他选择器")]),t._v(" "),a("li",[t._v("精简规则，尽可能合并不同类的重复规则")]),t._v(" "),a("li",[t._v("遵守盒子模型规则")])]),t._v(" "),a("h3",{attrs:{id:"_10-对比块、内联和-内联盒子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-对比块、内联和-内联盒子"}},[t._v("#")]),t._v(" 10. 对比块、内联和 内联盒子")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("块盒子")]),t._v("："),a("code",[t._v("display:block")])]),t._v(" "),a("ul",[a("li",[t._v("换行")]),t._v(" "),a("li",[t._v("width和height生效")]),t._v(" "),a("li",[t._v("竖直方向padding和margin生效")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("内联盒子")]),t._v("："),a("code",[t._v("display:inline")])]),t._v(" "),a("ul",[a("li",[t._v("不换行")]),t._v(" "),a("li",[t._v("width和height无效")]),t._v(" "),a("li",[t._v("竖直方向padding和margin无效")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("内联块盒子")]),t._v("："),a("code",[t._v("display:inline-block")])]),t._v(" "),a("ul",[a("li",[t._v("不换行")]),t._v(" "),a("li",[t._v("width和height生效")]),t._v(" "),a("li",[t._v("竖直方向padding和margin生效")])])])]),t._v(" "),a("h3",{attrs:{id:"_11-隐藏元素的方法有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-隐藏元素的方法有哪些"}},[t._v("#")]),t._v(" 11. 隐藏元素的方法有哪些？")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("opacity")]),t._v("：透明度，设置值为0可以隐藏元素，但依旧占据位置并且可响应绑定事件")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("visibility")]),t._v("：可见度，设置值为 hidden 可以隐藏元素，但依旧占据位置，不可响应绑定事件")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("display")]),t._v("：设置值为 none 可以隐藏元素，不占据位置也不响应绑定事件")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("position")]),t._v("：设置值为 absolute，top 和 left 设置为负值脱离页面，不占据位置也不响应绑定事件")])])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".hidd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("-10000px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" -10000px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("ol",{attrs:{start:"5"}},[a("li",[a("strong",[t._v("clip-path")]),t._v("：使用元素裁剪来隐藏元素，占据位置但不响应绑定事件")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clip-path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("polygon")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0px 0px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("0px 0px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("0px 0px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("0px 0px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ol",{attrs:{start:"6"}},[a("li",[a("strong",[t._v("position 和 clip 配合")]),t._v("：可以隐藏元素，不占据位置页不下响应事件")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".poclip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("0px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("0px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("0px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ol",{attrs:{start:"7"}},[a("li",[a("strong",[t._v("transform: scale(0,0)")]),t._v("：将元素缩放为 0，来实现元素的隐藏。这种方法下，元素仍在页面中占据位置，但是不会响应绑定的监听事件。")])]),t._v(" "),a("h3",{attrs:{id:"_12-link-和-import的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-link-和-import的区别"}},[t._v("#")]),t._v(" 12. link 和@import的区别？")]),t._v(" "),a("p",[t._v("link 和 @import 都能导入一个样式文件，区别如下：")]),t._v(" "),a("ol",[a("li",[t._v("link 是 HTML 标签，除了能导入 CSS 外，还能导入别的资源，比如图片、脚本和字体等；而 @import 是 CSS 的语法，"),a("strong",[t._v("只能用来导入 CSS")]),t._v("；")]),t._v(" "),a("li",[t._v("link 导入的样式会在页面加载时同时加载，@import 导入的样式需要等待页面加载完成后再加载；")]),t._v(" "),a("li",[t._v("link 没有"),a("strong",[t._v("兼容性问题")]),t._v("，@import 不兼容 ie5 以下；")]),t._v(" "),a("li",[t._v("link 可以通过 JS 操作 DOM 动态引入样式表改变样式，而 @import 不行。")])]),t._v(" "),a("h3",{attrs:{id:"_13-transition-和-animation-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-transition-和-animation-的区别"}},[t._v("#")]),t._v(" 13. transition 和 animation 的区别？")]),t._v(" "),a("ol",[a("li",[t._v("transition "),a("strong",[t._v("只有两个状态")]),t._v("：开始状态和结束状态，但 animation 可能是"),a("strong",[t._v("多个状态")]),t._v("，有帧的概念")]),t._v(" "),a("li",[t._v("transition 需要"),a("strong",[t._v("借助别的方式来触发")]),t._v("，比如 CSS 的状态选择器（如 "),a("code",[t._v(":hover")]),t._v("）或借助 JavaScript 来触发；animation 可以"),a("strong",[t._v("自动触发")]),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"_14-display-none与visibility-hidden的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-display-none与visibility-hidden的区别"}},[t._v("#")]),t._v(" 14. display:none与visibility:hidden的区别？")]),t._v(" "),a("p",[t._v("从结果上看，它们两个的作用都是隐藏 HTML 元素，但也有明显的区别：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("不占据空间")]),t._v(" ：display:none 让隐藏的元素"),a("strong",[t._v("不占据空间")]),t._v("；visibility:hidden 让隐藏的元素"),a("strong",[t._v("占据空间")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("回流")]),t._v("： display 要显示元素的话会"),a("strong",[t._v("触发回流，进行渲染")]),t._v("；visibility 要显示元素的话会"),a("strong",[t._v("进行重绘，不进行渲染")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("不继承")]),t._v("： display "),a("strong",[t._v("不是继承属性")]),t._v("，其子元素也会跟着消失；visibility "),a("strong",[t._v("是继承属性")]),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"_15-伪元素与伪类的区别和作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-伪元素与伪类的区别和作用"}},[t._v("#")]),t._v(" 15. 伪元素与伪类的区别和作用？")]),t._v(" "),a("p",[t._v("伪类和伪元素都是选择器，适用于：")]),t._v(" "),a("ul",[a("li",[t._v("无法更改HTML")]),t._v(" "),a("li",[t._v("要选择的元素不固定")]),t._v(" "),a("li",[t._v("要选择的元素状态或位置关系固定")])]),t._v(" "),a("h4",{attrs:{id:"_1-伪类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-伪类"}},[t._v("#")]),t._v(" 1）伪类")]),t._v(" "),a("p",[t._v("​\t\t"),a("strong",[t._v("伪类")]),t._v("用于当已有的元素"),a("strong",[t._v("处于某种状态时，为其添加对应的样式")]),t._v("，这个状态是根据用户行为而动态变化的。比如说当用户悬停在指定的元素时，我们可以通过"),a("code",[t._v(":hover")]),t._v("来描述这个元素的状态。")]),t._v(" "),a("h4",{attrs:{id:"_2-伪元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-伪元素"}},[t._v("#")]),t._v(" 2） 伪元素")]),t._v(" "),a("p",[t._v("​\t"),a("strong",[t._v("伪元素")]),t._v("用于"),a("strong",[t._v("创建一些不在文档树中的元素，并为其添加样式")]),t._v("。它们允许我们为元素的某些部分设置样式。比如说，我们可以通过"),a("code",[t._v("::before")]),t._v("来在一个元素前增加一些文本，并为这些文本添加样式。虽然用户可以看到这些文本，但是这些文本实际上不在文档树中。")]),t._v(" "),a("h3",{attrs:{id:"_16-对requestanimationframe的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-对requestanimationframe的理解"}},[t._v("#")]),t._v(" 16. 对requestAnimationframe的理解？")]),t._v(" "),a("p",[t._v("实现动画效果的方法比较多，Javascript 中可以通过定时器 setTimeout 来实现，CSS3 中可以使用 transition 和 animation 来实现，HTML5 中的 canvas 也可以实现。除此之外，HTML5 提供一个专门用于请求动画的API，那就是 requestAnimationFrame，顾名思义就是"),a("strong",[t._v("请求动画帧")]),t._v("。")]),t._v(" "),a("p",[t._v("MDN对该方法的描述：")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("​\twindow.requestAnimationFrame() 告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下一次重绘之前执行。")])]),a("p",[a("strong",[t._v("语法：")]),t._v(" "),a("code",[t._v("window.requestAnimationFrame(callback);")]),t._v("  其中，callback是"),a("strong",[t._v("下一次重绘之前更新动画帧所调用的函数")]),t._v("(即上面所说的回调函数)。该回调函数会被传入DOMHighResTimeStamp参数，它表示requestAnimationFrame() 开始去执行回调函数的时刻。该方法属于"),a("strong",[t._v("宏任务")]),t._v("，所以会在执行完微任务之后再去执行。")]),t._v(" "),a("p",[a("strong",[t._v("取消动画：")]),t._v(" 使用cancelAnimationFrame()来取消执行动画，该方法接收一个参数——requestAnimationFrame默认返回的id，只需要传入这个id就可以取消动画了。")]),t._v(" "),a("p",[a("strong",[t._v("优势：")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("CPU节能")]),t._v("：使用SetTinterval 实现的动画，当页面被隐藏或最小化时，SetTinterval 仍然在后台执行动画任务，由于此时页面处于不可见或不可用状态，刷新动画是没有意义的，完全是浪费CPU资源。而RequestAnimationFrame则完全不同，当页面处理未激活的状态下，该页面的屏幕刷新任务也会被系统暂停，因此跟着系统走的RequestAnimationFrame也会停止渲染，当页面被激活时，动画就从上次停留的地方继续执行，有效节省了CPU开销。")]),t._v(" "),a("li",[a("strong",[t._v("函数节流")]),t._v("：在高频率事件( resize, scroll 等)中，为了防止在一个刷新间隔内发生多次函数执行，RequestAnimationFrame可保证每个刷新间隔内，函数只被执行一次，这样既能保证流畅性，也能更好的节省函数执行的开销，一个刷新间隔内函数执行多次时没有意义的，因为多数显示器每16.7ms刷新一次，多次绘制并不会在屏幕上体现出来。")]),t._v(" "),a("li",[a("strong",[t._v("减少DOM操作")]),t._v("：requestAnimationFrame 会把每一帧中的所有DOM操作集中起来，在一次重绘或回流中就完成，并且重绘或回流的时间间隔紧紧跟随浏览器的刷新频率，一般来说，这个频率为每秒60帧。")])]),t._v(" "),a("p",[a("strong",[t._v("setTimeout执行动画的缺点")]),t._v("：它通过设定间隔时间来不断改变图像位置，达到动画效果。但是容易出现卡顿、抖动的现象；原因是：")]),t._v(" "),a("ul",[a("li",[t._v("settimeout任务被放入异步队列，只有当主线程任务执行完后才会执行队列中的任务，因此实际执行时间总是比设定时间要晚；")]),t._v(" "),a("li",[t._v("settimeout的固定时间间隔不一定与屏幕刷新间隔时间相同，会引起丢帧。")])]),t._v(" "),a("h3",{attrs:{id:"_17-为什么有时候用translate来改变位置而不是定位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-为什么有时候用translate来改变位置而不是定位"}},[t._v("#")]),t._v(" 17. 为什么有时候用translate来改变位置而不是定位")]),t._v(" "),a("p",[t._v("​\ttranslate 是 transform 属性的⼀个值。改变transform或opacity不会触发浏览器重新布局（reflow）或重绘（repaint），只会触发复合（compositions）。⽽改变绝对定位会触发重新布局，进⽽触发重绘和复合。")]),t._v(" "),a("p",[t._v("​\ttransform使浏览器为元素创建⼀个 GPU 图层，但改变绝对定位会使⽤到 CPU。 因此translate()更⾼效，可以缩短平滑动画的绘制时间。 ⽽translate改变位置时，元素依然会占据其原始空间，绝对定位就不会发⽣这种情况。")]),t._v(" "),a("h3",{attrs:{id:"_18-li-与-li-之间有看不见的空白间隔是什么原因引起的-如何解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-li-与-li-之间有看不见的空白间隔是什么原因引起的-如何解决"}},[t._v("#")]),t._v(" 18. li 与 li 之间有看不见的空白间隔是什么原因引起的？如何解决？")]),t._v(" "),a("p",[t._v("浏览器会把inline内联元素间的空白字符（空格、换行、Tab等）渲染成一个空格。为了美观，通常是一个"),a("code",[t._v("<li>")]),t._v("放在一行，这导致"),a("code",[t._v("<li>")]),t._v("换行后产生换行字符，它变成一个空格，占用了一个字符的宽度。")]),t._v(" "),a("p",[a("strong",[t._v("解决方法")]),t._v("：")]),t._v(" "),a("p",[t._v("（1）为"),a("code",[t._v("<li>")]),t._v("设置float:left。不足：有些容器是不能设置浮动，如左右切换的焦点图等。")]),t._v(" "),a("p",[t._v("（2）将所有"),a("code",[t._v("<li>")]),t._v("写在同一行。不足：代码不美观。")]),t._v(" "),a("p",[t._v("（3）将"),a("code",[t._v("<ul>")]),t._v("内的字符尺寸直接设为0，即font-size:0。不足："),a("code",[t._v("<ul>")]),t._v("中的其他字符尺寸也被设为0，需要额外重新设定其他字符尺寸，且在Safari浏览器依然会出现空白间隔。")]),t._v(" "),a("p",[t._v("（4）消除"),a("code",[t._v("<ul>")]),t._v("的字符间隔letter-spacing:-8px，不足：这也设置了"),a("code",[t._v("<li>")]),t._v("内的字符间隔，因此需要将"),a("code",[t._v("<li>")]),t._v("内的字符间隔设为默认letter-spacing:normal。")]),t._v(" "),a("h3",{attrs:{id:"_19-css3中有哪些新特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-css3中有哪些新特性"}},[t._v("#")]),t._v(" 19. CSS3中有哪些新特性")]),t._v(" "),a("ul",[a("li",[t._v("新增各种CSS选择器 （: not(.input)：所有 class 不是“input”的节点）")]),t._v(" "),a("li",[t._v("圆角 （border-radius:8px）")]),t._v(" "),a("li",[t._v("多列布局 （multi-column layout）")]),t._v(" "),a("li",[t._v("阴影和反射 （Shadoweflect）")]),t._v(" "),a("li",[t._v("文字特效 （text-shadow）")]),t._v(" "),a("li",[t._v("文字渲染 （Text-decoration）")]),t._v(" "),a("li",[t._v("线性渐变 （gradient）")]),t._v(" "),a("li",[t._v("旋转 （transform）")]),t._v(" "),a("li",[t._v("增加了旋转,缩放,定位,倾斜,动画,多背景")])]),t._v(" "),a("h3",{attrs:{id:"_20-替换元素的概念及计算规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-替换元素的概念及计算规则"}},[t._v("#")]),t._v(" 20. 替换元素的概念及计算规则")]),t._v(" "),a("p",[t._v("​\t通过修改某个属性值呈现的内容就可以被替换的元素就称为“替换元素”。")]),t._v(" "),a("p",[t._v("​\t替换元素除了内容可替换这一特性以外，还有以下特性：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("内容的外观不受页面上的CSS的影响")]),t._v("：用专业的话讲就是在样式表现在CSS作用域之外。如何更改替换元素本身的外观需要类似appearance属性，或者浏览器自身暴露的一些样式接口。")]),t._v(" "),a("li",[a("strong",[t._v("有自己的尺寸")]),t._v("：在Web中，很多替换元素在没有明确尺寸设定的情况下，其默认的尺寸（不包括边框）是300像素×150像素，如")]),t._v(" "),a("li",[a("strong",[t._v("在很多CSS属性上有自己的一套表现规则")]),t._v("：比较具有代表性的就是vertical-align属性，对于替换元素和非替换元素，vertical-align属性值的解释是不一样的。比方说vertical-align的默认值的baseline，很简单的属性值，基线之意，被定义为字符x的下边缘，而替换元素的基线却被硬生生定义成了元素的下边缘。")]),t._v(" "),a("li",[a("strong",[t._v("所有的替换元素都是内联水平元素")]),t._v("：也就是替换元素和替换元素、替换元素和文字都是可以在一行显示的。但是，替换元素默认的display值却是不一样的，有的是inline，有的是inline-block。")])]),t._v(" "),a("p",[t._v("替换元素的尺寸从内而外分为三类：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("固有尺寸：")]),t._v(" 指的是替换内容原本的尺寸。例如，图片、视频作为一个独立文件存在的时候，都是有着自己的宽度和高度的。")]),t._v(" "),a("li",[a("strong",[t._v("HTML尺寸：")]),t._v(" 只能通过HTML原生属性改变，这些HTML原生属性包括的width和height属性、的size属性。")]),t._v(" "),a("li",[a("strong",[t._v("CSS尺寸：")]),t._v(" 特指可以通过CSS的width和height或者max-width/min-width和max-height/min-height设置的尺寸，对应盒尺寸中的content box。")])]),t._v(" "),a("p",[t._v("这三层结构的计算规则具体如下： （1）如果没有CSS尺寸和HTML尺寸，则使用固有尺寸作为最终的宽高。 （2）如果没有CSS尺寸，则使用HTML尺寸作为最终的宽高。 （3）如果有CSS尺寸，则最终尺寸由CSS属性决定。 （4）如果“固有尺寸”含有固有的宽高比例，同时仅设置了宽度或仅设置了高度，则元素依然按照固有的宽高比例显示。 （5）如果上面的条件都不符合，则最终宽度表现为300像素，高度为150像素。 （6）内联替换元素和块级替换元素使用上面同一套尺寸计算规则。")]),t._v(" "),a("h3",{attrs:{id:"_21-常见的图片格式及使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21-常见的图片格式及使用场景"}},[t._v("#")]),t._v(" 21. 常见的图片格式及使用场景")]),t._v(" "),a("p",[t._v("（1）"),a("strong",[t._v("BMP")]),t._v(": 无损的，几乎没有进行压缩，所以一般文件较大")]),t._v(" "),a("p",[t._v("（2）"),a("strong",[t._v("GIF")]),t._v("： 无损的，文件小，同时GIF格式还具有支持动画以及透明的优点。但是GIF格式仅支持8bit的索引色，所以GIF格式适用于对色彩要求不高同时需要文件体积较小的场景")]),t._v(" "),a("p",[t._v("（3）"),a("strong",[t._v("JPEG")]),t._v("是有损的。JPEG的图片的优点是采用了直接色，得益于更丰富的色彩，JPEG非常适合用来存储照片，与GIF相比，JPEG不适合用来存储企业Logo、线框类的图。因为有损压缩会导致图片模糊，而直接色的选用，又会导致图片文件较GIF更大。")]),t._v(" "),a("p",[t._v("（4）"),a("strong",[t._v("PNG-8")]),t._v("是无损的、使用索引色的点阵图。PNG是一种比较新的图片格式，PNG-8是非常好的GIF格式替代者，在可能的情况下，应该尽可能的使用PNG-8而不是GIF，因为在相同的图片效果下，"),a("strong",[t._v("PNG-8具有更小的文件体积")]),t._v("。除此之外，PNG-8还支持透明度的调节，而GIF并不支持。除非需要动画的支持，否则没有理由使用GIF而不是PNG-8。")]),t._v(" "),a("p",[t._v("（5）"),a("strong",[t._v("PNG-24")]),t._v("是无损的、使用直接色的点阵图。PNG-24的优点在于它压缩了图片的数据，使得同样效果的图片，PNG-24格式的文件大小要比BMP小得多。当然，PNG24的图片还是要比JPEG、GIF、PNG-8大得多。")]),t._v(" "),a("p",[t._v("（6）"),a("strong",[t._v("SVG")]),t._v("是无损的矢量图。SVG是矢量图意味着SVG图片由直线和曲线以及绘制它们的方法组成。当放大SVG图片时，看到的还是线和曲线，而不会出现像素点。SVG图片在放大时，不会失真，所以它适合用来绘制Logo、Icon等")]),t._v(" "),a("p",[t._v("（7）"),a("strong",[t._v("WebP")]),t._v("是谷歌开发的一种新图片格式，WebP是同时支持有损和无损压缩的、使用直接色的点阵图。从名字就可以看出来它是为Web而生的，什么叫为Web而生呢？就是说相同质量的图片，WebP具有更小的文件体积。现在网站上充满了大量的图片，如果能够降低每一个图片的文件大小，那么将大大减少浏览器和服务器之间的数据传输量，进而降低访问延迟，提升访问体验。目前只有Chrome浏览器和Opera浏览器支持WebP格式，兼容性不太好。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在无损压缩的情况下，相同质量的WebP图片，文件大小要比PNG小26%；")])]),t._v(" "),a("li",[a("p",[t._v("在有损压缩的情况下，具有相同图片精度的WebP图片，文件大小要比JPEG小25%~34%；")])]),t._v(" "),a("li",[a("p",[t._v("WebP图片格式支持图片透明度，一个无损压缩的WebP图片，如果要支持透明度只需要22%的格外文件大小。")])])]),t._v(" "),a("h3",{attrs:{id:"_23-对csssprites的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_23-对csssprites的理解"}},[t._v("#")]),t._v(" 23. 对CSSSprites的理解")]),t._v(" "),a("p",[t._v("​\tCSSSprites（精灵图），将一个页面涉及到的所有图片都包含到一张大图中去，然后利用CSS的 background-image，background-repeat，background-position属性的组合进行背景定位。")]),t._v(" "),a("p",[a("strong",[t._v("优点")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("利用"),a("code",[t._v("CSS Sprites")]),t._v("能很好地减少网页的http请求，从而大大提高了页面的性能，这是"),a("code",[t._v("CSS Sprites")]),t._v("最大的优点；")]),t._v(" "),a("li",[a("code",[t._v("CSS Sprites")]),t._v("能减少图片的字节，把3张图片合并成1张图片的字节总是小于这3张图片的字节总和。")])]),t._v(" "),a("p",[a("strong",[t._v("缺点")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在图片合并时，要把多张图片有序的、合理的合并成一张图片，还要留好足够的空间，防止板块内出现不必要的背景。在宽屏及高分辨率下的自适应页面，如果背景不够宽，很容易出现背景断裂；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("CSSSprites")]),t._v("在开发的时候相对来说有点麻烦，需要借助"),a("code",[t._v("photoshop")]),t._v("或其他工具来对每个背景单元测量其准确的位置。")])]),t._v(" "),a("li",[a("p",[t._v("维护方面："),a("code",[t._v("CSS Sprites")]),t._v("在维护的时候比较麻烦，页面背景有少许改动时，就要改这张合并的图片，无需改的地方尽量不要动，这样避免改动更多的"),a("code",[t._v("CSS")]),t._v("，如果在原来的地方放不下，又只能（最好）往下加图片，这样图片的字节就增加了，还要改动"),a("code",[t._v("CSS")]),t._v("。")])])]),t._v(" "),a("h3",{attrs:{id:"_24-什么是物理像素-逻辑像素和像素密度-为什么在移动端开发时需要用到-3x-2x这种图片"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24-什么是物理像素-逻辑像素和像素密度-为什么在移动端开发时需要用到-3x-2x这种图片"}},[t._v("#")]),t._v(" 24.什么是物理像素，逻辑像素和像素密度，为什么在移动端开发时需要用到@3x, @2x这种图片？")]),t._v(" "),a("p",[t._v("以 iPhone XS 为例，当写 CSS 代码时，针对于单位 px，其宽度为 414px & 896px，也就是说当赋予一个 "),a("strong",[t._v("DIV元素宽度为 414px")]),t._v("，这个 DIV 就会填满手机的宽度；")]),t._v(" "),a("p",[t._v("而如果有一把尺子来实际测量这部手机的，实际为 "),a("strong",[t._v("1242*2688 物理像素")]),t._v("；经过计算可知，1242/414=3，也就是说，在单边上，"),a("strong",[t._v("一个逻辑像素=3个物理像素")]),t._v("，就说这个屏幕的"),a("strong",[t._v("像素密度为 3")]),t._v("，也就是常说的 "),a("strong",[t._v("3 倍屏")]),t._v("。")]),t._v(" "),a("p",[t._v("对于图片来说，为了保证其不失真，1 个图片像素至少要对应一个物理像素，假如原始图片是 500300 像素，那么在 3 倍屏上就要放一个 1500900 像素的图片才能保证 1 个物理像素至少对应一个图片像素，才能不失真。")]),t._v(" "),a("p",[t._v("当然，也可以针对所有屏幕，都只提供最高清图片。虽然低密度屏幕用不到那么多图片像素，而且会因为下载多余的像素造成带宽浪费和下载延迟，但从结果上说能保证图片在所有屏幕上都不会失真。")]),t._v(" "),a("p",[t._v("还可以使用 CSS 媒体查询来"),a("strong",[t._v("判断不同的像素密度，从而选择不同的图片")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("my-image")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("low.png"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@media")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("only")]),t._v(" screen "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("min-device-pixel-ratio")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1.5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#my-image")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("high.png"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"_25-如何写css注释-作用是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_25-如何写css注释-作用是什么"}},[t._v("#")]),t._v(" 25. 如何写CSS注释，作用是什么？")]),t._v(" "),a("p",[t._v("​\t以"),a("code",[t._v("/*")]),t._v("开头，"),a("code",[t._v("*/")]),t._v("结束。可阻止其中 CSS 解析，给代码增加说明，提升可读性")]),t._v(" "),a("h3",{attrs:{id:"_26-如何取出css注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_26-如何取出css注释"}},[t._v("#")]),t._v(" 26. 如何取出CSS注释？")]),t._v(" "),a("ul",[a("li",[t._v("用正则"),a("code",[t._v("/\\/*[\\s\\S]*?*\\//")]),t._v("全局匹配注释，替换为空字符串")]),t._v(" "),a("li",[t._v("用工程化工具，如"),a("code",[t._v("cssnano")]),t._v("来去除注释")])]),t._v(" "),a("h3",{attrs:{id:"_27-important-的作用和弊端-如何避免"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27-important-的作用和弊端-如何避免"}},[t._v("#")]),t._v(" 27. !important 的作用和弊端，如何避免？")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("作用")]),t._v("\n!important 可以忽略选择器 CSS 选择器优先级，让声明的属性总是生效")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("弊端")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("破坏原 CSS 级联规则，增加调试难度")])]),t._v(" "),a("li",[a("p",[t._v("修改样式变得困难")])]),t._v(" "),a("li",[a("p",[t._v("污染全局样式")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("避免")])]),t._v(" "),a("ul",[a("li",[t._v("用 CSS 选择器优先级解决样式冲突")]),t._v(" "),a("li",[t._v("不在全局、会被复用的插件中使用 !important")]),t._v(" "),a("li",[t._v("通过 CSS 命名或 Shadow DOM 限制 CSS 作用域")])])])]),t._v(" "),a("h3",{attrs:{id:"_28-margin值为负值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_28-margin值为负值"}},[t._v("#")]),t._v(" 28. margin值为负值")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("margin-top")]),t._v("和"),a("code",[t._v("margin-left")]),t._v("负值 : 盒子向上移或左移")]),t._v(" "),a("li",[a("code",[t._v("margin-right")]),t._v("和"),a("code",[t._v("margin-right")]),t._v("负值： 盒子不会移动，而是右方和下方的盒子向盒子移动")])]),t._v(" "),a("h2",{attrs:{id:"二、页面布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、页面布局"}},[t._v("#")]),t._v(" 二、页面布局")]),t._v(" "),a("h3",{attrs:{id:"_1-常见的css布局单位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-常见的css布局单位"}},[t._v("#")]),t._v(" 1. 常见的CSS布局单位")]),t._v(" "),a("p",[t._v("常用的布局单位包括像素（px），百分比（%），em，rem，vm/vh。")]),t._v(" "),a("h4",{attrs:{id:"_1-像素px"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-像素px"}},[t._v("#")]),t._v(" 1. 像素px")]),t._v(" "),a("p",[a("strong",[t._v("屏幕分辨率")]),t._v("是指在屏幕的横纵方向上的像素点数量，比如分辨率 1920×1080 意味着水平方向含有 1920 个像素数，垂直方向含有 1080 个像素数。")]),t._v(" "),a("p",[t._v("像素 px 是页面布局的基础，一个像素表示终端（电脑、手机、平板等）屏幕所能显示的最小的区域，像素分为"),a("strong",[t._v("两种类型")]),t._v("，css 像素和物理像素")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("css 像素")]),t._v("：为 web 开发者提供，在 css 中使用的一个抽象单位；")]),t._v(" "),a("li",[a("strong",[t._v("物理像素")]),t._v("：只与设备的硬件密度有关，任何设备的物理像素都是固定的。")])]),t._v(" "),a("h4",{attrs:{id:"_2-百分比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-百分比"}},[t._v("#")]),t._v(" 2.百分比")]),t._v(" "),a("p",[t._v("​\t当浏览器的宽度或者高度发生变化时，通过百分比单位可以使得浏览器中的组件的宽和高随着浏览器的变化而变化，从而实现响应式的效果。一般认为子元素的百分比相对于直接父元素。")]),t._v(" "),a("h4",{attrs:{id:"_3-em和rem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-em和rem"}},[t._v("#")]),t._v(" 3. em和rem")]),t._v(" "),a("p",[t._v("em 和 rem 相对于 px 更具灵活性，它们都是"),a("strong",[t._v("相对长度单位")]),t._v("，它们之间的区别："),a("strong",[t._v("em 相对于父元素")]),t._v("，"),a("strong",[t._v("rem 相对于根元素")]),t._v("。")]),t._v(" "),a("ul",[a("li",[t._v("**em：**文本相对长度单位。相对于当前对象内文本的字体尺寸。如果当前行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸（默认16px）。（相对父元素的字体大小倍数）")]),t._v(" "),a("li",[t._v("**rem：**rem 是 css3 新增的一个相对单位，相对于根元素（html 元素）的 font-size 的倍数。作用：利用 rem 可以实现简单的响应式布局，可以利用 html 元素中字体的大小与屏幕间的比值来设置 font-size 的值，以此实现当屏幕分辨率变化让元素也随之变化。")])]),t._v(" "),a("h4",{attrs:{id:"_4-vm-vh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-vm-vh"}},[t._v("#")]),t._v(" 4.vm/vh")]),t._v(" "),a("p",[t._v("vm/vh 是与视图窗口有关的单位，vw 表示相对于视图窗口的宽度，vh 表示相对于视图窗口高度，除了 vw 和 vh 外，还有 vmin 和 vmax 两个相关的单位。")]),t._v(" "),a("ul",[a("li",[t._v("vw：相对于视图的宽度，视窗宽度是 100 vw；")]),t._v(" "),a("li",[t._v("vh：相对于视图的高度，视窗高度是 100 vh；")]),t._v(" "),a("li",[t._v("vmin：vw 和 vh 中的较小值；")]),t._v(" "),a("li",[t._v("vmax：vw 和 vh 中的较大值。")])]),t._v(" "),a("p",[a("strong",[t._v("vw/vh")]),t._v(" 和百分比很类似，两者的区别：")]),t._v(" "),a("ul",[a("li",[t._v("百分比（%）：大部分相对于祖先元素，也有相对于自身的情况比如（border-radius、translate 等）")]),t._v(" "),a("li",[t._v("vw/vm：相对于视窗的尺寸")])]),t._v(" "),a("h3",{attrs:{id:"_2-px、em、rem的区别及使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-px、em、rem的区别及使用场景"}},[t._v("#")]),t._v(" 2. px、em、rem的区别及使用场景")]),t._v(" "),a("p",[t._v("三者的区别：")]),t._v(" "),a("ul",[a("li",[t._v("px是固定的像素，一旦设置了就无法因为适应页面大小而改变。")]),t._v(" "),a("li",[t._v("em和rem相对于px更具有灵活性，他们是相对长度单位，其长度不是固定的，更适用于响应式布局。")]),t._v(" "),a("li",[t._v("em是相对于其父元素来设置字体大小，这样就会存在一个问题，进行任何元素设置，都有可能需要知道他父元素的大小。而rem是相对于根元素，这样就意味着，只需要在根元素确定一个参考值。")])]),t._v(" "),a("p",[a("strong",[t._v("使用场景：")])]),t._v(" "),a("ul",[a("li",[t._v("对于只需要适配少部分移动设备，且分辨率对页面影响不大的，使用 px 即可。")]),t._v(" "),a("li",[t._v("对于需要适配各种移动设备，使用 rem，例如需要适配 iphone 和 ipad 等分辨率差别比较挺大的设备。")])]),t._v(" "),a("h2",{attrs:{id:"三、定位与浮动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、定位与浮动"}},[t._v("#")]),t._v(" 三、定位与浮动")]),t._v(" "),a("h3",{attrs:{id:"_1-为什么需要清除浮动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-为什么需要清除浮动"}},[t._v("#")]),t._v(" 1. 为什么需要清除浮动？")]),t._v(" "),a("blockquote",[a("p",[t._v("浮动定义")])]),t._v(" "),a("p",[t._v("​\t非IE浏览器下，容器不设高度且子元素浮动时，容器高度不能被内容撑开。 此时，内容会溢出到容器外面而影响布局。这种现象被称为浮动（溢出）。")]),t._v(" "),a("blockquote",[a("p",[t._v("浮动工作原理")])]),t._v(" "),a("ul",[a("li",[t._v("浮动元素脱离文档流，不占据空间（引起“高度塌陷”现象）")]),t._v(" "),a("li",[t._v("浮动元素碰到包含它的边框或者其他浮动元素的边框停留")])]),t._v(" "),a("p",[t._v("​\t浮动元素可以左右移动，直到遇到另一个浮动元素或者遇到它外边缘的包含框。浮动框不属于文档流中的普通流，当元素浮动之后，不会影响块级元素的布局，只会影响内联元素布局。此时文档流中的普通流就会表现得该浮动框不存在一样的布局模式。当包含框的高度小于浮动框的时候，此时就会出现“高度塌陷”。")]),t._v(" "),a("blockquote",[a("p",[t._v("浮动引起问题")])]),t._v(" "),a("ul",[a("li",[t._v("父元素的高度无法被撑开，影响与父元素同级的元素")]),t._v(" "),a("li",[t._v("与浮动元素同级的非浮动元素会跟随其后")]),t._v(" "),a("li",[t._v("若浮动的元素不是第一个元素，则该元素之前的元素也要浮动，否则会影响页面的显示结构")])]),t._v(" "),a("h3",{attrs:{id:"_2-清除浮动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-清除浮动"}},[t._v("#")]),t._v(" 2. 清除浮动")]),t._v(" "),a("h4",{attrs:{id:"_1-最后添加div标签-clear-both"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-最后添加div标签-clear-both"}},[t._v("#")]),t._v(" （1）最后添加div标签，"),a("code",[t._v("clear:both")])]),t._v(" "),a("p",[t._v("​\t最后一个浮动元素之后添加一个空的 div 标签，并添加 "),a("code",[t._v("clear:both")]),t._v(" （在左右两侧不允许浮动元素）样式")]),t._v(" "),a("h4",{attrs:{id:"_2-after伪元素-clear-both"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-after伪元素-clear-both"}},[t._v("#")]),t._v(" （2）"),a("code",[t._v("::after")]),t._v("伪元素, "),a("code",[t._v("clear:both")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clearfix::after")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" both"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clearfix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    *"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("zoom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[a("strong",[t._v("核心原理")]),t._v("就是通过 ::after 伪元素为在父元素的最后一个子元素后面生成一个内容为空的块级元素，然后通过 clear 将这个伪元素移动到所有它之前的浮动元素的后面，画个图来理解一下。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/ljcdzh/my_pic/raw/master/img/202203171912497.png",alt:"image-20211023211328067"}})]),t._v(" "),a("h4",{attrs:{id:"_3-父元素添加overflow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-父元素添加overflow"}},[t._v("#")]),t._v(" （3）父元素添加overflow")]),t._v(" "),a("ul",[a("li",[t._v("父级标签添加 "),a("code",[t._v("overflow:hidden")]),t._v(" :  超出内容不可见")]),t._v(" "),a("li",[t._v("父级标签添加"),a("code",[t._v("overflow:auto")]),t._v(": 如果内容被修剪，则浏览器会显示滚动条以便查看其余的内容。")])]),t._v(" "),a("h3",{attrs:{id:"_3-使用clear属性清楚浮动的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用clear属性清楚浮动的原理"}},[t._v("#")]),t._v(" 3. 使用clear属性清楚浮动的原理？")]),t._v(" "),a("p",[t._v("使用 clear 属性清除浮动，其语法如下：")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none | left | right | both\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("​\t如果单看字面意思，clear:left 是“清除左浮动”，clear:right 是“清除右浮动”，实际上，这种解释是有问题的，因为浮动一直还在，并没有清除。")]),t._v(" "),a("p",[t._v("​\t官方对 clear 属性解释：“"),a("strong",[t._v("元素盒子的边不能和前面的浮动元素相邻")]),t._v("”，对元素设置 clear 属性是为了"),a("strong",[t._v("避免")]),t._v("浮动元素对该元素的影响，而不是清除掉浮动。")]),t._v(" "),a("p",[t._v("​\t还需要注意 clear 属性指的是元素盒子的边不能和前面的浮动元素相邻，注意这里“"),a("strong",[t._v("前面的")]),t._v("”3个字，也就是 clear 属性对**“后面的”**浮动元素是不闻不问的。考虑到 float 属性要么是 left，要么是 right，不可能同时存在，同时由于 clear 属性对“后面的”浮动元素不闻不问，因此，当 clear:left 有效的时候，clear:right 必定无效，也就是此时 clear:left 等同于设置 clear:both；同样地，clear:right 如果有效也是等同于设置 clear:both。由此可见，clear:left 和 clear:right 这两个声明就没有任何使用的价值，至少在 CSS 世界中是如此，直接使用 clear:both 吧。")]),t._v(" "),a("p",[a("strong",[t._v("一般使用伪元素的方式清除浮动：")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clear::after")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("both"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("strong",[t._v("clear 属性只有块级元素才有效的")]),t._v("，而 "),a("code",[t._v("::after")]),t._v(" 等伪元素默认都是内联水平，这就是借助伪元素清除浮动影响时需要设置 "),a("code",[t._v("display")]),t._v(" 属性值的原因。")]),t._v(" "),a("h3",{attrs:{id:"_4-对bfc的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-对bfc的理解"}},[t._v("#")]),t._v(" 4. 对BFC的理解")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Box")]),t._v(":Box 是 CSS 布局的对象和基本单位，⼀个页面是由很多个 Box 组成的，这个 Box 就是我们所说的盒模型。")]),t._v(" "),a("li",[a("strong",[t._v("Formatting context")]),t._v("：上下⽂格式化，它是页面中的⼀块渲染区域，并且有⼀套渲染规则，它决定了其⼦元素将如何定位，以及和其他元素的关系和相互作⽤")])]),t._v(" "),a("h3",{attrs:{id:"_5-什么是margin重叠问题-如何解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-什么是margin重叠问题-如何解决"}},[t._v("#")]),t._v(" 5. 什么是margin重叠问题？如何解决？")]),t._v(" "),a("h4",{attrs:{id:"问题描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题描述"}},[t._v("#")]),t._v(" 问题描述")]),t._v(" "),a("p",[t._v("​\t两个块级元素的上外边距和下外边距可能会合并（折叠）为一个外边距，其大小会取其中外边距值大的那个，这种行为就是外边距折叠。需要注意的是，"),a("strong",[t._v("浮动的元素和绝对定位")]),t._v("这种脱离文档流的元素的外边距不会折叠。重叠只会出现在"),a("strong",[t._v("垂直方向")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"计算原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算原则"}},[t._v("#")]),t._v(" "),a("strong",[t._v("计算原则")])]),t._v(" "),a("p",[t._v("折叠合并后外边距的计算原则如下：")]),t._v(" "),a("ul",[a("li",[t._v("如果两者都是正数，那么就去最大者")]),t._v(" "),a("li",[t._v("如果是一正一负，就会正值减去负值的绝对值")]),t._v(" "),a("li",[t._v("两个都是负值时，用0减去两个中绝对值大的那个")])]),t._v(" "),a("h4",{attrs:{id:"解决办法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决办法"}},[t._v("#")]),t._v(" "),a("strong",[t._v("解决办法")])]),t._v(" "),a("h5",{attrs:{id:"_1-兄弟之间重叠"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-兄弟之间重叠"}},[t._v("#")]),t._v(" （1）兄弟之间重叠")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("底部元素变为行内盒子："),a("code",[t._v("display: inline-block")])])]),t._v(" "),a("li",[a("p",[t._v("底部元素设置浮动："),a("code",[t._v("float")])])]),t._v(" "),a("li",[a("p",[t._v("底部元素的position的值为"),a("code",[t._v("absolute/fixed")])])])]),t._v(" "),a("h5",{attrs:{id:"_2-父子之间重叠"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-父子之间重叠"}},[t._v("#")]),t._v(" （2）父子之间重叠")]),t._v(" "),a("ul",[a("li",[t._v("父元素加入："),a("code",[t._v("overflow: hidden")])]),t._v(" "),a("li",[t._v("父元素添加透明边框："),a("code",[t._v("border:1px solid transparent")])]),t._v(" "),a("li",[t._v("子元素变为行内盒子："),a("code",[t._v("display: inline-block")])]),t._v(" "),a("li",[t._v("子元素加入浮动属性或定位")])]),t._v(" "),a("h3",{attrs:{id:"_6-层叠上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-层叠上下文"}},[t._v("#")]),t._v(" 6. 层叠上下文")]),t._v(" "),a("h4",{attrs:{id:"_1-层叠上下文定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-层叠上下文定义"}},[t._v("#")]),t._v(" 1. 层叠上下文定义")]),t._v(" "),a("p",[t._v("​\t层叠上下文是 HTML 中一个三位的概念，除了 x、y 轴，众 HTML 元素依据自己定义的属性优先级在 Z 轴上按照一定的顺序排开，就是层叠上下文要描述的东西。")]),t._v(" "),a("p",[t._v("​\t一个元素含有层叠上下文（也就是说它是层叠上下文元素），我们可以理解为这个元素在 z 轴上就离观察者更近。")]),t._v(" "),a("h4",{attrs:{id:"_2-层叠等级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-层叠等级"}},[t._v("#")]),t._v(" 2. 层叠等级")]),t._v(" "),a("ol",[a("li",[t._v("普通元素的层叠等级优先由其所在的层叠上下文决定。")]),t._v(" "),a("li",[t._v("层叠等级的比较只有在当前层叠上下文元素中才有意义。不同层叠上下文中比较层叠等级是没有意义的。")])]),t._v(" "),a("h4",{attrs:{id:"_3-如何产生-层叠上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何产生-层叠上下文"}},[t._v("#")]),t._v(" 3. 如何产生“层叠上下文”")]),t._v(" "),a("p",[t._v("其实，层叠上下文也基本上是有一些特定的CSS属性创建的，一般有3种方法：")]),t._v(" "),a("ol",[a("li",[t._v("HTML 中的根元素"),a("code",[t._v("<html></html>")]),t._v("本身就具有层叠上下文，称为“根层叠上下文”。")]),t._v(" "),a("li",[t._v("普通元素设置 position 属性为非 static 值并设置 z-index 属性为具体数值，产生层叠上下文。")]),t._v(" "),a("li",[t._v("CSS3 中的新属性也可以产生层叠上下文。")])]),t._v(" "),a("h4",{attrs:{id:"_4-层叠顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-层叠顺序"}},[t._v("#")]),t._v(" 4. 层叠顺序")]),t._v(" "),a("p",[t._v("层叠顺序，英文称作 stacking order，表示元素发生层叠时有着特定的垂直显示顺序。下面是盒模型的层叠规则：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/ljcdzh/my_pic/raw/master/img/202203171928145.png",alt:"image-20210910225208629"}})]),t._v(" "),a("p",[t._v("对于上图，由上到下分别是：")]),t._v(" "),a("p",[t._v("（1）背景和边框：建立当前层叠上下文元素的背景和边框。")]),t._v(" "),a("p",[t._v("（2）负的z-index：当前层叠上下文中，z-index属性值为负的元素。")]),t._v(" "),a("p",[t._v("（3）块级盒：文档流内非行内级非定位后代元素。")]),t._v(" "),a("p",[t._v("（4）浮动盒：非定位浮动元素。")]),t._v(" "),a("p",[t._v("（5）行内盒：文档流内行内级非定位后代元素。")]),t._v(" "),a("p",[t._v("（6）z-index:0：层叠级数为0的定位元素。")]),t._v(" "),a("p",[t._v("（7）正z-index：z-index属性值为正的定位元素。")]),t._v(" "),a("p",[a("strong",[t._v("注意:")]),t._v(" 当定位元素 z-index:auto，生成盒在当前层叠上下文中的层级为 0，不会建立新的层叠上下文，除非是根元素。")]),t._v(" "),a("h4",{attrs:{id:"_5-如何比较两个元素的层叠等级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-如何比较两个元素的层叠等级"}},[t._v("#")]),t._v(" 5. 如何比较两个元素的层叠等级？")]),t._v(" "),a("ul",[a("li",[t._v("在同一个层叠上下文中，比较两个元素就是按照上图的介绍的层叠顺序进行比较。")]),t._v(" "),a("li",[t._v("如果不在同一个层叠上下文中的时候，那就需要比较两个元素分别所处的层叠上下文的等级。")]),t._v(" "),a("li",[t._v("如果两个元素都在同一个层叠上下文，且层叠顺序相同，则在 HTML 中定义越后面的层叠等级越高")])]),t._v(" "),a("h3",{attrs:{id:"_7-position的属性有哪些-区别是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-position的属性有哪些-区别是什么"}},[t._v("#")]),t._v(" 7. position的属性有哪些，区别是什么？")]),t._v(" "),a("p",[t._v("position有以下属性值：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性值")]),t._v(" "),a("th",[t._v("概述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("absolute")]),t._v(" "),a("td",[t._v("生成绝对定位的元素，相对于static定位以外的一个父元素进行定位。元素的位置通过left、top、right、bottom属性进行规定。")])]),t._v(" "),a("tr",[a("td",[t._v("relative")]),t._v(" "),a("td",[t._v("生成相对定位的元素，相对于其原来的位置进行定位。元素的位置通过left、top、right、bottom属性进行规定。")])]),t._v(" "),a("tr",[a("td",[t._v("fixed")]),t._v(" "),a("td",[t._v("生成绝对定位的元素，指定元素相对于屏幕视⼝（viewport）的位置来指定元素位置。元素的位置在屏幕滚动时不会改变，⽐如回到顶部的按钮⼀般都是⽤此定位⽅式。")])]),t._v(" "),a("tr",[a("td",[t._v("static")]),t._v(" "),a("td",[t._v("默认值，没有定位，元素出现在正常的文档流中，会忽略 top, bottom, left, right 或者 z-index 声明，块级元素从上往下纵向排布，⾏级元素从左向右排列。")])]),t._v(" "),a("tr",[a("td",[t._v("inherit")]),t._v(" "),a("td",[t._v("规定从父元素继承position属性的值")])]),t._v(" "),a("tr",[a("td",[t._v("sticky")]),t._v(" "),a("td",[t._v("粘性定位，该定位基于用户滚动的位置。 它的行为就像 position:relative; 而当页面滚动超出目标区域时，它的表现就像 position:fixed;，它会固定在目标位置。")])])])]),t._v(" "),a("p",[t._v("前面三者的定位方式如下：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("**relative：**元素的定位永远是相对于元素自身位置的，和其他元素没关系，也不会影响其他元素。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/dadadaxyx/my-images/raw/master/image-20210910225446664.png",alt:"image-20210910225446664"}})])]),t._v(" "),a("li",[a("p",[t._v("**fixed：**元素的定位是相对于 window （或者 iframe）边界的，和其他元素没有关系。但是它具有破坏性，会导致其他元素位置的变化。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/dadadaxyx/my-images/raw/master/image-20210910225500666.png",alt:"image-20210910225500666"}})])]),t._v(" "),a("li",[a("p",[t._v("**absolute：**元素的定位相对于前两者要复杂许多。如果为 absolute 设置了 top、left，浏览器会根据什么去确定它的纵向和横向的偏移量呢？答案是浏览器会递归查找该元素的所有父元素，如果找到一个设置了"),a("code",[t._v("position:relative/absolute/fixed")]),t._v("的元素，就以该元素为基准定位，如果没找到，就以浏览器边界定位。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/ljcdzh/my_pic/raw/master/img/202203171932917.png",alt:"image-20210910225513066"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/ljcdzh/my_pic/raw/master/img/202203171932796.png",alt:"image-20210910225525205"}})])])]),t._v(" "),a("h3",{attrs:{id:"_8-display、float、position的关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-display、float、position的关系"}},[t._v("#")]),t._v(" 8. display、float、position的关系")]),t._v(" "),a("p",[t._v("（1）首先判断display属性是否为none，如果为none，则position和float属性的值不影响元素最后的表现。")]),t._v(" "),a("p",[t._v("（2）然后判断position的值是否为absolute或者fixed，如果是，则float属性失效，并且display的值应该被设置为table或者block，具体转换需要看初始转换值。")]),t._v(" "),a("p",[t._v("（3）如果position的值不为absolute或者fixed，则判断float属性的值是否为none，如果不是，则display的值则按上面的规则转换。注意，如果position的值为relative并且float属性的值存在，则relative相对于浮动后的最终位置定位。")]),t._v(" "),a("p",[t._v("（4）如果float的值为none，则判断元素是否为根元素，如果是根元素则display属性按照上面的规则转换，如果不是，则保持指定的display属性值不变。")]),t._v(" "),a("p",[t._v("​\t总的来说，可以把它看作是一个类似优先级的机制，\"position:absolute\"和\"position:fixed\"优先级最高，有它存在的时候，浮动不起作用，'display'的值也需要调整；其次，元素的'float'特性的值不是\"none\"的时候或者它是根元素的时候，调整'display'的值；最后，非根元素，并且非浮动元素，并且非绝对定位的元素，'display'特性值同设置值。")]),t._v(" "),a("h3",{attrs:{id:"_9-absolute与fixed共同点与不同点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-absolute与fixed共同点与不同点"}},[t._v("#")]),t._v(" 9. absolute与fixed共同点与不同点")]),t._v(" "),a("p",[a("strong",[t._v("共同点：")])]),t._v(" "),a("ul",[a("li",[t._v("改变行内元素的呈现方式，将display置为inline-block")]),t._v(" "),a("li",[t._v("使元素脱离普通文档流，不再占据文档物理空间")]),t._v(" "),a("li",[t._v("覆盖非定位文档元素")])]),t._v(" "),a("p",[a("strong",[t._v("不同点：")])]),t._v(" "),a("ul",[a("li",[t._v("abusolute与fixed的根元素不同，abuselute的根元素可以设置，fixed根元素是浏览器。")]),t._v(" "),a("li",[t._v("在有滚动条的页面中，absolute会跟着父元素进行移动，fixed固定在页面的具体位置。")])]),t._v(" "),a("h3",{attrs:{id:"_10-对sticky定位的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-对sticky定位的理解"}},[t._v("#")]),t._v(" 10. 对sticky定位的理解")]),t._v(" "),a("p",[t._v("sticky 英文字面意思是粘贴，所以可以把它称之为粘性定位。语法："),a("strong",[t._v("position: sticky;")]),t._v(" 基于用户的滚动位置来定位。")]),t._v(" "),a("p",[t._v("粘性定位的元素是依赖于用户的滚动，在 "),a("strong",[t._v("position:relative")]),t._v(" 与 "),a("strong",[t._v("position:fixed")]),t._v(" 定位之间切换。它的行为就像 "),a("strong",[t._v("position:relative;")]),t._v(" 而当页面滚动超出目标区域时，它的表现就像 "),a("strong",[t._v("position:fixed;")]),t._v("，它会固定在目标位置。元素定位表现为在跨越特定阈值前为相对定位，之后为固定定位。这个特定阈值指的是 top, right, bottom 或 left 之一，换言之，指定 top, right, bottom 或 left 四个阈值其中之一，才可使粘性定位生效。否则其行为与相对定位相同。")]),t._v(" "),a("h2",{attrs:{id:"四、场景应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、场景应用"}},[t._v("#")]),t._v(" 四、场景应用")]),t._v(" "),a("h3",{attrs:{id:"_1-实现一个三角形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-实现一个三角形"}},[t._v("#")]),t._v(" 1. 实现一个三角形")]),t._v(" "),a("p",[t._v("CSS绘制三角形主要用到的是border属性，也就是边框。")]),t._v(" "),a("p",[t._v("平时在给盒子设置边框时，往往都设置很窄，就可能误以为边框是由矩形组成的。实际上，border属性是右三角形组成的，下面看一个例子：")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orange blue red green"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("将元素的长宽都设置为0，显示出来的效果是这样的：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/ljcdzh/my_pic/raw/master/img/202203151117464.webp",alt:"img"}})]),t._v(" "),a("p",[t._v("三角型：")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-left")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50px solid red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50px solid transparent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-bottom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50px solid transparent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("transparent: 透明属性")])]),a("p",[t._v("总体的原则就是通过上下左右边框来控制三角形的方向，用边框的宽度比来控制三角形的角度。")]),t._v(" "),a("h3",{attrs:{id:"_2-实现一个扇形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-实现一个扇形"}},[t._v("#")]),t._v(" 2. 实现一个扇形")]),t._v(" "),a("p",[t._v("用CSS实现扇形的思路和三角形基本一致，就是多了一个圆角的样式，实现一个90°的扇形：")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px solid transparent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("heigt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-radius")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-top-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/ljcdzh/my_pic/raw/master/img/202203151153085.webp",alt:"img"}})]),t._v(" "),a("h2",{attrs:{id:"五、性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、性能"}},[t._v("#")]),t._v(" 五、性能")]),t._v(" "),a("h3",{attrs:{id:"_1-如何开启硬件加速gpu"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-如何开启硬件加速gpu"}},[t._v("#")]),t._v(" 1. 如何开启硬件加速GPU")]),t._v(" "),a("h4",{attrs:{id:"_1-gpu是什么-作用是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-gpu是什么-作用是什么"}},[t._v("#")]),t._v(" 1. GPU是什么，作用是什么？")]),t._v(" "),a("p",[t._v("​\tGPU 是图形处理器，它帮助 CPU 从图形处理的任务解放出来，让 CPU 可以执行更多其他的系统任务，这样可以大大提高计算机的整体性能。")]),t._v(" "),a("h4",{attrs:{id:"_2-硬件加速是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-硬件加速是什么"}},[t._v("#")]),t._v(" 2. 硬件加速是什么？")]),t._v(" "),a("p",[t._v("​\t就是将浏览器的渲染过程交给 GPU 处理，而不是使用自带的比较慢的渲染器。这样就可以使得 animation 和 transition 更加顺畅。")]),t._v(" "),a("p",[t._v("我们可以在浏览器中用 CSS 开启硬件加速，使 GPU 发挥功能，从而提升性能。")]),t._v(" "),a("h4",{attrs:{id:"_3-硬件加速原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-硬件加速原理"}},[t._v("#")]),t._v(" 3. 硬件加速原理")]),t._v(" "),a("p",[t._v("​\t浏览器接收到页面文档后，会将文档中的标记语言解析为DOM树。DOM树和CSS结合后形成浏览器构建页面的渲染树。渲染树中包含大量的渲染元素，每个渲染元素会被分到一个图层中，每个图层又会被加载到GPU形成渲染纹理，而图层在GPU中transform是不会触发repaint的，最终这些使用transform的图层都会由独立的合成器进程进行处理")]),t._v(" "),a("p",[t._v("CSS transform会创建了一个新的复合图层，可以被GPU直接用来执行transform操作。")]),t._v(" "),a("blockquote",[a("p",[t._v("浏览器什么时候会创建一个独立的符合图层呢？")])]),t._v(" "),a("ul",[a("li",[t._v("3D 或者 CSS transform")]),t._v(" "),a("li",[a("code",[t._v("video")]),t._v(" 和 "),a("code",[t._v("canvas")]),t._v(" 标签")]),t._v(" "),a("li",[t._v("css filters")]),t._v(" "),a("li",[t._v("元素覆盖时，比如使用了 z-index 属性")])]),t._v(" "),a("blockquote",[a("p",[t._v("为什么硬件加速会使页面流畅")])]),t._v(" "),a("p",[t._v("​\t因为 transform 属性不会触发浏览器的 repaint（重绘），而绝对定位 absolute 中的 left 和 top 则会一直触发 repaint（重绘）。")]),t._v(" "),a("blockquote",[a("p",[t._v("为什么transform没有触发repaint")])]),t._v(" "),a("p",[t._v("简而言之，transform 动画 GPU 控制，支持硬件加载，并不需要软件方面的渲染。")]),t._v(" "),a("p",[t._v("​\t"),a("strong",[t._v("并不是所有的 CSS 属性都能触发 GPU 的硬件加速，事实上只有少数的属性可以，比如 transform、opacity、filter。")])]),t._v(" "),a("h4",{attrs:{id:"_4-如何用css开启硬件加速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-如何用css开启硬件加速"}},[t._v("#")]),t._v(" 4. 如何用CSS开启硬件加速")]),t._v(" "),a("p",[t._v("​\t使用“欺骗“浏览器来开启硬件加速。浏览器在处理下面的 css 的时候，会使用 GPU 渲染。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("transform")]),t._v("（当 3D 变化的样式出现时会使用 GPU 加速）")]),t._v(" "),a("li",[a("strong",[t._v("opacity")]),t._v("（设置透明度）")]),t._v(" "),a("li",[a("strong",[t._v("filter")]),t._v("(设置图片灰度)")]),t._v(" "),a("li",[a("strong",[t._v("will-change")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("​\t采用 transform: translateZ(0) 采用 transform: translate3d(0, 0, 0) 使用 CSS 的 will-change属性。 will-change 可以设置为opacity、transform、top、left、bottom、right。")])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"title"}),a("p",[t._v("​\t注意！层爆炸，由于某些原因可能导致产生大量不在预期内的合成层，虽然有浏览器的层压缩机制，但是也有很多无法进行压缩的情况，这就可能出现层爆炸的现象（简单理解就是，很多不需要提升为合成层的元素因为某些不当操作成为了合成层）。解决层爆炸的问题，最佳方案是打破 overlap 的条件，也就是说让其他元素不要和合成层元素重叠。简单直接的方式：使用 3D 硬件加速提升动画性能时，最好给元素增加一个 z-index 属性，人为干扰合成的排序，可以有效减少创建不必要的合成层，提升渲染性能，移动端优化效果尤为明显。")])])])}),[],!1,null,null,null);s.default=v.exports}}]);