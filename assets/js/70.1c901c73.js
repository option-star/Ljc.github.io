(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{722:function(t,_,s){"use strict";s.r(_);var r=s(12),v=Object(r.a)({},(function(){var t=this,_=t.$createElement,s=t._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-https解决了http的哪些问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-https解决了http的哪些问题"}},[t._v("#")]),t._v(" 1. HTTPS解决了HTTP的哪些问题？")]),t._v(" "),s("h3",{attrs:{id:"_1-窃听风险"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-窃听风险"}},[t._v("#")]),t._v(" 1. 窃听风险")]),t._v(" "),s("blockquote",[s("p",[t._v("原因")])]),t._v(" "),s("p",[t._v("​\t由于HTTP本身不具备加密功能，所以也没办法做到对通信进行加密所以只能使用明文方式发送。")]),t._v(" "),s("blockquote",[s("p",[t._v("解决")])]),t._v(" "),s("p",[t._v("​\t混合加密的方式实现了信息的"),s("strong",[t._v("机密性")]),t._v("，解决了窃听的风险。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/option-star/imgs/202204111026114.png",alt:"图片"}})]),t._v(" "),s("h3",{attrs:{id:"_2-冒充风险"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-冒充风险"}},[t._v("#")]),t._v(" 2. 冒充风险")]),t._v(" "),s("blockquote",[s("p",[t._v("原因")])]),t._v(" "),s("p",[t._v("​\t\t在HTTP协议通信时，不论是谁发送过来的请求都会返回响应，因此不确认通信方。")]),t._v(" "),s("blockquote",[s("p",[t._v("解决")])]),t._v(" "),s("p",[t._v("​\t\t将服务器公钥放入到数字证书中，解决了冒充的风险。")]),t._v(" "),s("p",[t._v("在计算机里，这个权威的机构就是 CA （数字证书认证机构），将服务器公钥放在数字证书（由数字证书认证机构颁发）中，只要证书是可信的，公钥就是可信的。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/option-star/imgs/202204111026471.jpeg",alt:"图片"}})]),t._v(" "),s("h3",{attrs:{id:"_3-篡改风险"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-篡改风险"}},[t._v("#")]),t._v(" 3. 篡改风险")]),t._v(" "),s("blockquote",[s("p",[t._v("原因")])]),t._v(" "),s("p",[t._v("​\t由于HTTP无法保证报文的真实性，因此，请求发送后直到对方接收之前的这段时间里，请求被修改了也无法获悉。遭攻击者拦截并篡改内容的攻击称为中间人攻击。")]),t._v(" "),s("blockquote",[s("p",[t._v("解决")])]),t._v(" "),s("p",[t._v("​\t摘要算法的方式来实现完整性，它能够 生成数据独一无二的指纹，指纹用于验证数据的完整性，解决了篡改的风险。")]),t._v(" "),s("p",[t._v("​\t在计算机里会"),s("strong",[t._v("用哈希函数来计算出内容的哈希值")]),t._v("，也就是内容的「指纹」，这个"),s("strong",[t._v("哈希值是唯一的，且无法通过哈希值推导出内容")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/option-star/imgs/202204111026107.png",alt:"图片"}})]),t._v(" "),s("h2",{attrs:{id:"_2-https的加密方式有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-https的加密方式有哪些"}},[t._v("#")]),t._v(" 2. HTTPS的加密方式有哪些？")]),t._v(" "),s("h3",{attrs:{id:"_1-共享密钥加密"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-共享密钥加密"}},[t._v("#")]),t._v(" 1） 共享密钥加密")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/option-star/imgs/202204111045730.jpeg",alt:"img"}})]),t._v(" "),s("p",[t._v("​\t\t加密和解密同用一个密钥的方式称为共享密钥加密，也被叫做对称密钥加密。以共享密钥方式加密时必须将密钥也发给对方,可究竟怎样才能安全地转交？")]),t._v(" "),s("h3",{attrs:{id:"_2-公开密钥加密"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-公开密钥加密"}},[t._v("#")]),t._v(" 2）公开密钥加密")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/option-star/imgs/202204111046342.jpeg",alt:"img"}})]),t._v(" "),s("p",[t._v("​\t\t公开密钥加密的方式很好的解决了安全问题。公开密钥加密使用一对非对称的密钥。一把为私钥，一把为公钥，其中私钥是不能让任何人得知的，而公钥则可以随便公布。发送密文的一段，使用对方的公钥进行加密，对方接收到加密信息后，使用自己的私钥进行解密。这样就避免了发送解密的私钥，解决了对称密钥共享的安全问题。(公钥加密对称加密的密钥，私钥则进行解密)。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("公钥加密，私钥解密")]),t._v("。这个目的是为了"),s("strong",[t._v("保证内容传输的安全")]),t._v("，因为被公钥加密的内容，其他人是无法解密的，只有持有私钥的人，才能解密出实际的内容；")]),t._v(" "),s("li",[s("strong",[t._v("私钥加密，公钥解密")]),t._v("。这个目的是为了"),s("strong",[t._v("保证消息不会被冒充")]),t._v("，因为私钥是不可泄露的，如果公钥能正常解密出私钥加密的内容，就能证明这个消息是来源于持有私钥身份的人发送的。")])]),t._v(" "),s("h3",{attrs:{id:"_3-混合密钥加密-https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-混合密钥加密-https"}},[t._v("#")]),t._v(" 3） 混合密钥加密（HTTPS）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/option-star/imgs/202204111046299.jpeg",alt:"img"}})]),t._v(" "),s("p",[t._v("​\t\tHTTPS采用共享密钥加密和公开密钥加密的混合加密机制。在交换密钥环节，使用公开密钥加密技术，之后通信报文交换的阶段，则可以使用共享密钥加密技术。")]),t._v(" "),s("h2",{attrs:{id:"_3-数字证书签发和验证流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-数字证书签发和验证流程"}},[t._v("#")]),t._v(" 3. 数字证书签发和验证流程？")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/option-star/imgs/202204111031957.png",alt:"图片"}})]),t._v(" "),s("blockquote",[s("p",[t._v("CA证书签发过程")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("CA 会把持有者的公钥、用途、颁发者、有效时间等信息打成一个包，然后对这些信息"),s("strong",[t._v("进行 Hash 计算")]),t._v("，得到一个 Hash 值；")])]),t._v(" "),s("li",[s("p",[t._v("CA 会使用自己的"),s("strong",[t._v("私钥将该 Hash 值加密")]),t._v("，生成 Certificate Signature，也就是 CA 对证书做了签名；")])]),t._v(" "),s("li",[s("p",[t._v("将 Certificate Signature "),s("strong",[t._v("添加在文件证书")]),t._v("上，形成数字证书；")])])]),t._v(" "),s("blockquote",[s("p",[t._v("CA证书验证过程")])]),t._v(" "),s("ul",[s("li",[t._v("客户端会使用"),s("strong",[t._v("同样的 Hash 算法")]),t._v("获取该证书的 Hash 值 H1；")]),t._v(" "),s("li",[t._v("通常浏览器和操作系统中集成了 CA 的公钥信息，浏览器收到证书后可以使用 CA 的公钥解密 Certificate Signature 内容，"),s("strong",[t._v("得到一个 Hash 值 H2 ；")])]),t._v(" "),s("li",[s("strong",[t._v("最后比较 H1 和 H2，如果值相同")]),t._v("，则为可信赖的证书，否则则认为证书不可信。")])]),t._v(" "),s("h2",{attrs:{id:"_4-证书链是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-证书链是什么"}},[t._v("#")]),t._v(" 4. 证书链是什么？")]),t._v(" "),s("p",[t._v("​\t但事实上，证书的验证过程中"),s("strong",[t._v("还存在一个证书信任链的问题")]),t._v("，因为我们向 CA 申请的证书一般不是根证书签发的，而是由中间证书签发的，比如百度的证书，从下图你可以看到，证书的层级有三级：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/option-star/imgs/202204111034677.png",alt:"图片"}})]),t._v(" "),s("blockquote",[s("p",[t._v("证书信任链验证流程")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/option-star/imgs/202204111033460.png",alt:"图片"}})]),t._v(" "),s("blockquote",[s("p",[t._v("为什么需要有中间证书？")])]),t._v(" "),s("p",[t._v("​\t"),s("strong",[t._v("这是为了确保根证书的绝对安全性，将根证书隔离地越严格越好，不然根证书如果失守了，那么整个信任链都会有问题。")])]),t._v(" "),s("h2",{attrs:{id:"_5-ssl-tls握手流程是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-ssl-tls握手流程是什么"}},[t._v("#")]),t._v(" 5. SSL/TLS握手流程是什么？")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/option-star/imgs/202204111046208.png",alt:"img"}})]),t._v(" "),s("h3",{attrs:{id:"_1-clienthello"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-clienthello"}},[t._v("#")]),t._v(" 1）ClientHello")]),t._v(" "),s("p",[t._v("​\t\t首先，客户端（通常是浏览器）先向服务器发出加密通信的请求，这被叫做ClientHello请求。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("支持的协议版本")]),t._v("，比如TLS 1.0版。")]),t._v(" "),s("li",[s("strong",[t._v("随机数")]),t._v('，稍后用于生成"对话密钥"。')]),t._v(" "),s("li",[s("strong",[t._v("密码套件列表")]),t._v("，比如RSA公钥加密。")])]),t._v(" "),s("h3",{attrs:{id:"_2-severhello"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-severhello"}},[t._v("#")]),t._v(" 2）  SeverHello")]),t._v(" "),s("p",[t._v("服务器收到客户端请求后，向客户端发出回应。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("确认SSL/TLS协议版本")]),t._v("。如果浏览器不支持，则关闭加密通信")]),t._v(" "),s("li",[s("strong",[t._v("随机数")]),t._v("。用于生产【会话密钥】条件之一")]),t._v(" "),s("li",[s("strong",[t._v("确认密码套件列表")]),t._v("，比如RSA公钥加密。")]),t._v(" "),s("li",[s("strong",[t._v("数字证书")])])]),t._v(" "),s("h3",{attrs:{id:"_3-客户端回应"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-客户端回应"}},[t._v("#")]),t._v(" 3） 客户端回应")]),t._v(" "),s("p",[t._v("​\t客户端收到服务器的回应之后，首先通过浏览器或者操作系统中的CA公钥，确认服务器的数字证书的真实性。")]),t._v(" "),s("p",[t._v("​\t如果证书没有问题，客户端就会"),s("strong",[t._v("从证书中取出服务器的公钥")]),t._v("。然后使用它加密报文，然后向服务器发送信息：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("随机数（"),s("code",[t._v("pre-master key")]),t._v("）")]),t._v("。该随机数会被服务器公钥加密")]),t._v(" "),s("li",[s("strong",[t._v("加密通信算法改变通知")]),t._v("，标识随后的信息都将用【会话密钥】加密通信")]),t._v(" "),s("li",[s("strong",[t._v("客户端握手结束通知")]),t._v("：标识客户端的握手阶段已经结束。这一项同时把之前所有内容的发生的 数据做个摘要，用来供服务端校验。")])]),t._v(" "),s("p",[t._v("​\t"),s("strong",[t._v("服务端和客户端有了这三个随机数，接着就用双方协商的加密算法，各自生成本次通信的【会话密钥】。")])]),t._v(" "),s("h3",{attrs:{id:"_4-服务器回应"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-服务器回应"}},[t._v("#")]),t._v(" 4） 服务器回应")]),t._v(" "),s("p",[t._v('​\t\t服务器收到客户端的第三个随机数pre-master key之后，通过协商的加密算法，计算出本次通信的"会话密钥"。然后向客户端响应。')]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("加密通信算法改变通知")]),t._v("，表示随后的信息都将用【会话密钥】加密通信")]),t._v(" "),s("li",[s("strong",[t._v("服务器握手结束通知")]),t._v("，表示服务器的握手阶段已经结束。这一项同时也是前面发送的所有内容的hash值，用来供客户端校验。")])]),t._v(" "),s("h2",{attrs:{id:"_6-为什么ssl-tls握手需要三个随机数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-为什么ssl-tls握手需要三个随机数"}},[t._v("#")]),t._v(" 6. 为什么SSL/TLS握手需要三个随机数？")]),t._v(" "),s("p",[t._v('​\t\t"不管是客户端还是服务器，都需要随机数，这样生成的密钥才不会每次都一样。由于SSL协议中证书是静态的，因此十分有必要引入一种随机因素来保证协商出来的密钥的随机性。')]),t._v(" "),s("p",[t._v("​\t\t对于RSA密钥交换算法来说，pre-master-key本身就是一个随机数，再加上hello消息中的随机，三个随机数通过一个密钥导出器最终导出一个对称密钥。")]),t._v(" "),s("p",[t._v('​\t\tpre master的存在在于SSL协议不信任每个主机都能产生完全随机的随机数，如果随机数不随机，那么pre master secret就有可能被猜出来，那么仅适用pre master secret作为密钥就不合适了，因此必须引入新的随机因素，那么客户端和服务器加上pre master secret三个随机数一同生成的密钥就不容易被猜出了，一个伪随机可能完全不随机，可是是三个伪随机就十分接近随机了，每增加一个自由度，随机性增加的可不是一。"')]),t._v(" "),s("h2",{attrs:{id:"_7-https有什么缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-https有什么缺点"}},[t._v("#")]),t._v(" 7. HTTPS有什么缺点？")]),t._v(" "),s("p",[t._v("​\t\t与纯文本通信相比，加密通信"),s("strong",[t._v("会消耗更多的CPU和内存资源")]),t._v("。如果每次通信都加密，会消耗相当多的资源。在进行加密处理时，并非对所有内容都进行加密处理，而是仅在那些需要隐藏的信息才会加密，以节约资源。")]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://weread.qq.com/web/reader/3da32b505dd9f43da9a1acakd8232f00235d82c8d161fb2",target:"_blank",rel:"noopener noreferrer"}},[t._v("图解HTTP"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.cn/post/6844904089495535624",target:"_blank",rel:"noopener noreferrer"}},[t._v("看完这篇 HTTPS，和面试官扯皮就没问题了"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.cn/post/6844904127420432391",target:"_blank",rel:"noopener noreferrer"}},[t._v("《大前端进阶 安全》系列 HTTPS详解（通俗易懂）"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.cn/post/6844903599303032845",target:"_blank",rel:"noopener noreferrer"}},[t._v("分分钟让你理解HTTPS"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzI4Njc5NjM1NQ==&mid=2247485207&idx=1&sn=64827cd627ad08798d21076cef1b7cfa&chksm=ebd6383bdca1b12de54dc4e157543b2ff63fc8c876a73f830d3855760b90ae109b239ade633f&mpshare=1&scene=24&srcid=0416kj0u5u9OKS1MIT61ETQM#rd",target:"_blank",rel:"noopener noreferrer"}},[t._v("用信鸽来解释 HTTPS"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);_.default=v.exports}}]);