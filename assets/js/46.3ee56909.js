(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{698:function(t,v,_){"use strict";_.r(v);var s=_(12),r=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"_1-什么是svn"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是svn"}},[t._v("#")]),t._v(" 1. 什么是SVN？")]),t._v(" "),_("p",[t._v("​\tSVN（subversion），是一个开源代码的版本控制系统，通过采用分支管理系统的高效管理，简而言之就是用于多个人共同开发同一个项目，实现共享资源，实现最终集中式的管理。")]),t._v(" "),_("h2",{attrs:{id:"_2-svn的中心化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-svn的中心化"}},[t._v("#")]),t._v(" 2. SVN的中心化？")]),t._v(" "),_("p",[t._v("​\tsvn是有一个服务中心的，总的代码就在这个服务中心上，然后其他各个电脑上的客户端可以链接到这个中心，从而可以从中心拉取代码以及提交代码。")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/option-star/imgs/202204211647370.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("h2",{attrs:{id:"_3-svn的工作原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-svn的工作原理"}},[t._v("#")]),t._v(" 3. svn的工作原理")]),t._v(" "),_("p",[t._v("​\tSVN是一个增量式的版本控制，它不会将各个版本的副本都完整保存下来，而只会记录下版本之间的差异，然后按照顺序更新或者恢复特定版本的数据。这使得服务端的存储量会非常低。")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/option-star/imgs/202204211643177.png",alt:""}})]),t._v(" "),_("h2",{attrs:{id:"_4-数据存储"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-数据存储"}},[t._v("#")]),t._v(" 4. 数据存储")]),t._v(" "),_("blockquote",[_("p",[_("strong",[t._v("BDB")])])]),t._v(" "),_("p",[t._v("​\tBDB，一种事务安全型类型，版本库可以使用的一种经过充分测试的后台"),_("strong",[t._v("数据库")]),t._v("实现，不能再通过网络共享的文件系统上使用。但该方式在服务器中断时，有可能锁住数据。")]),t._v(" "),_("p",[t._v("​\tBDB是Subversion1.2 版本以前的缺省版本库格式。")]),t._v(" "),_("blockquote",[_("p",[_("strong",[t._v("FSFS")])])]),t._v(" "),_("p",[t._v("​\tFSFS，一个专用于Subversion版本库的文件系统后端，可以使用网络"),_("strong",[t._v("文件")]),t._v("系统。")]),t._v(" "),_("p",[t._v("​\t是1.2版本及以后的缺省版本库格式。")]),t._v(" "),_("h2",{attrs:{id:"_5-svn和git的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-svn和git的区别"}},[t._v("#")]),t._v(" 5. SVN和Git的区别？")]),t._v(" "),_("blockquote",[_("p",[t._v("SVN")])]),t._v(" "),_("p",[t._v("​\tSVN 是一种集中式管理的版本控制工具，分为服务器和客户端，客户端每次完成或修改代码需要联网提交到服务端进行存储，冲突主要源于时效性，操作重点在于先更新再提交。")]),t._v(" "),_("blockquote",[_("p",[t._v("Git")])]),t._v(" "),_("p",[t._v("​\tGit 是一种分布式管理的版本控制工具，分为远程版本库和本地版本库，每个节点都是自己服务器兼客户端，完成或修改代码时直接提交到本地版本库节点，无需联网；只有推送和克隆版本呢库时需要联网和远程版本库进行ssh对接。")]),t._v(" "),_("h2",{attrs:{id:"_6-命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-命令"}},[t._v("#")]),t._v(" 6. 命令")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("作用")]),t._v(" "),_("th",[t._v("git")]),t._v(" "),_("th",[t._v("svn")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("版本库初始化")]),t._v(" "),_("td",[t._v("git init")]),t._v(" "),_("td",[t._v("svn create")])]),t._v(" "),_("tr",[_("td",[t._v("clone")]),t._v(" "),_("td",[t._v("git clone")]),t._v(" "),_("td",[t._v("svn co（checkout）")])]),t._v(" "),_("tr",[_("td",[t._v("add")]),t._v(" "),_("td",[t._v("git add （.除去.gitignore，*所有的文件）")]),t._v(" "),_("td",[t._v("svn add")])]),t._v(" "),_("tr",[_("td",[t._v("commit")]),t._v(" "),_("td",[t._v("git commit")]),t._v(" "),_("td",[t._v("svn commit")])]),t._v(" "),_("tr",[_("td",[t._v("pull")]),t._v(" "),_("td",[t._v("git pull")]),t._v(" "),_("td",[t._v("svn update")])]),t._v(" "),_("tr",[_("td",[t._v("push")]),t._v(" "),_("td",[t._v("git push")]),t._v(" "),_("td",[t._v("-")])]),t._v(" "),_("tr",[_("td",[t._v("查看工作状态")]),t._v(" "),_("td",[t._v("git status")]),t._v(" "),_("td",[t._v("svn status")])]),t._v(" "),_("tr",[_("td",[t._v("创建分支")]),t._v(" "),_("td",[t._v("git branch <分支名>")]),t._v(" "),_("td",[t._v("svn cp <分支名>")])]),t._v(" "),_("tr",[_("td",[t._v("删除分支")]),t._v(" "),_("td",[t._v("git branch -d <分支名>")]),t._v(" "),_("td",[t._v("svn rm <分支名>")])]),t._v(" "),_("tr",[_("td",[t._v("分支合并")]),t._v(" "),_("td",[t._v("git merge <分支名>")]),t._v(" "),_("td",[t._v("svn merge <分支名>")])]),t._v(" "),_("tr",[_("td",[t._v("工作区差异")]),t._v(" "),_("td",[t._v("git differ （-cached / head）")]),t._v(" "),_("td",[t._v("svn diff")])]),t._v(" "),_("tr",[_("td",[t._v("更新至历史版本")]),t._v(" "),_("td",[t._v("git checkout")]),t._v(" "),_("td",[t._v("svn update -r")])]),t._v(" "),_("tr",[_("td",[t._v("切换tag")]),t._v(" "),_("td",[t._v("git checkout")]),t._v(" "),_("td",[t._v("svn switch")])]),t._v(" "),_("tr",[_("td",[t._v("切换分支")]),t._v(" "),_("td",[t._v("git checkout branch")]),t._v(" "),_("td",[t._v("svn switch branch")])]),t._v(" "),_("tr",[_("td",[t._v("还原文件")]),t._v(" "),_("td",[t._v("git checkout - path")]),t._v(" "),_("td",[t._v("svn revert path")])]),t._v(" "),_("tr",[_("td",[t._v("删除文件")]),t._v(" "),_("td",[t._v("git rm path")]),t._v(" "),_("td",[t._v("svn rm path")])]),t._v(" "),_("tr",[_("td",[t._v("移动文件")]),t._v(" "),_("td",[t._v("git mv path")]),t._v(" "),_("td",[t._v("svn mv path")])]),t._v(" "),_("tr",[_("td",[t._v("清除未追踪文件")]),t._v(" "),_("td",[t._v("git clean")]),t._v(" "),_("td",[t._v("svn status sed -e")])])])]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"title"}),_("p",[t._v("​\t只是做了浅显的了解。")])]),_("h2",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),_("ol",[_("li",[_("a",{attrs:{href:"https://www.runoob.com/svn/svn-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("菜鸟教程"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://blog.csdn.net/potato512/article/details/83895244",target:"_blank",rel:"noopener noreferrer"}},[t._v("SVN工作原理"),_("OutboundLink")],1)]),t._v(" "),_("li")])])}),[],!1,null,null,null);v.default=r.exports}}]);