(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{718:function(e,s,a){"use strict";a.r(s);var t=a(12),r=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"_1-什么是websocket"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是websocket"}},[e._v("#")]),e._v(" 1. 什么是WebSocket？")]),e._v(" "),a("p",[a("strong",[e._v("webSocket")]),e._v("： 一种浏览器与服务器进行双全工通讯的网络技术，属于应用层协议。")]),e._v(" "),a("h2",{attrs:{id:"_2-优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-优点"}},[e._v("#")]),e._v(" 2. 优点")]),e._v(" "),a("ol",[a("li",[e._v("支持双向通信，实时性更强")]),e._v(" "),a("li",[e._v("更好的二进制支持")]),e._v(" "),a("li",[e._v("较少的控制开销。连接建立后，ws客户端、服务端进行数据交互时，协议控制的数据包头部较小。而HTTP协议每次通信都需要携带完整的头部。")]),e._v(" "),a("li",[e._v("支持扩展。")])]),e._v(" "),a("h2",{attrs:{id:"_3-如何建立连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何建立连接"}},[e._v("#")]),e._v(" 3. 如何建立连接")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/option-star/imgs/202204092121400.png",alt:"image-20220409212138195"}})]),e._v(" "),a("h3",{attrs:{id:"_1-客户端-申请协议升级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-客户端-申请协议升级"}},[e._v("#")]),e._v(" 1）客户端：申请协议升级")]),e._v(" "),a("p",[e._v("首先，客户端发起协议升级的请求，采用的是标准的HTTP报文格式，且只支持GET方法")]),e._v(" "),a("blockquote",[a("p",[e._v("请求报文")])]),e._v(" "),a("div",{staticClass:"language-http line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[e._v("GET")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[e._v("/")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[e._v("HTTP/1.1")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[e._v("localhost:8080")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Origin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[e._v("http://127.0.0.1:3000")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Connection")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[e._v("Upgrade")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Upgrade")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[e._v("websocket")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Sec-WebSocket-Version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[e._v("13")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Sec-WebSocket-Key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[e._v("w4v7O6xFTi36lq3RNcgctw==")])]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("ul",[a("li",[a("code",[e._v("Upgrade: websocket")]),e._v("： 表示要升级到webSocket协议")]),e._v(" "),a("li",[a("code",[e._v("Sec-WebSocket-Version: 13")]),e._v(": 表示webSocket的版本。如果服务端不支持该版本，需要返回一个"),a("code",[e._v("Sec-WebSocket-Version")]),e._v("header，里面包含服务端支持的版本号")]),e._v(" "),a("li",[a("code",[e._v("Sec-WebSocket-key")]),e._v(": 提供基本的防护，比如恶意连接，无意连接。")]),e._v(" "),a("li",[a("code",[e._v("Connection: Upgrade")]),e._v(": 表示升级协议。")])]),e._v(" "),a("h3",{attrs:{id:"_2-服务端-响应协议升级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-服务端-响应协议升级"}},[e._v("#")]),e._v(" 2）服务端：响应协议升级")]),e._v(" "),a("p",[e._v("服务端响应请求，状态码为101表示协议切换。")]),e._v(" "),a("div",{staticClass:"language-http line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token response-status"}},[a("span",{pre:!0,attrs:{class:"token http-version property"}},[e._v("HTTP/1.1")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token status-code number"}},[e._v("101")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token reason-phrase string"}},[e._v("Switching Protocols")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Connection")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token header-value"}},[e._v("Upgrade")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Upgrade")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[e._v("websocket")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Sec-WebSocket-Accept")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[e._v("Oy4NRAQ13jhfONC7bP8dTKb4PTU=")])]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("其中："),a("code",[e._v("Sec-WebSocket-Accept")]),e._v("根据客户端请求首部的"),a("code",[e._v("Sec-WebSocket-Key")]),e._v("计算出来的。")]),e._v(" "),a("p",[e._v("计算公式为：")]),e._v(" "),a("ul",[a("li",[e._v("将"),a("code",[e._v("Sec-WebSocket-Key")]),e._v("跟"),a("code",[e._v("258EAFA5-E914-47DA-95CA-C5AB0DC85B11")]),e._v("拼接。")]),e._v(" "),a("li",[e._v("通过"),a("strong",[e._v("SHA1")]),e._v("计算出摘要，并转成base64字符串")])]),e._v(" "),a("h2",{attrs:{id:"_4-数据帧格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-数据帧格式"}},[e._v("#")]),e._v(" 4. 数据帧格式")]),e._v(" "),a("p",[e._v("WebSocket客户端、服务端通信的最小单位是帧（frame），由1个或多个帧组成一条完整的消息（message）。")]),e._v(" "),a("ol",[a("li",[e._v("发送端：将消息切割成多个帧，并发送给服务端；")]),e._v(" "),a("li",[e._v("接收端：接收消息帧，并将关联的帧重新组装成完整的消息；")])]),e._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://blog.csdn.net/p312011150/article/details/79758068",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebSocket 数据帧"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=r.exports}}]);